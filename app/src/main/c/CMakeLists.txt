# Sets the minimum version of CMake required to build your native library.
# This ensures that a certain set of CMake features is available to
# your build.

cmake_minimum_required(VERSION 3.4.1)

# Specifies a library name, specifies whether the library is STATIC or
# SHARED, and provides relative paths to the source code. You can
# define multiple libraries by adding multiple add_library() commands,
# and CMake builds them for you. When you build your app, Gradle
# automatically packages shared libraries with your APK.

add_library( # Sets the name of the library.
        native-lib

        # Sets the library as a shared library.
        SHARED

        # Provides a relative path to your source file(s).
        native-lib.c)

# Source and header codes generated by Matlab Coder for the image analysis (obsolete version).

#[[add_library(
    Fonction_Somme
        SHARED
        ./Fonction_Somme/Fonction_Somme.h
        ./Fonction_Somme/regionprops.h
        ./Fonction_Somme/rtGetInf.h
        ./Fonction_Somme/rtGetNaN.h
        ./Fonction_Somme/Fonction_Somme_initialize.h
        ./Fonction_Somme/imresize.h
        ./Fonction_Somme/multithresh.h
        ./Fonction_Somme/rgb2lab.h
        ./Fonction_Somme/mean.h
        ./Fonction_Somme/imfindcircles.h
        ./Fonction_Somme/combineVectorElements.h
        ./Fonction_Somme/Fonction_Somme_data.h
        ./Fonction_Somme/Fonction_Somme_emxutil.h
        ./Fonction_Somme/Fonction_Somme_rtwutil.h
        ./Fonction_Somme/Fonction_Somme_types.h
        ./Fonction_Somme/libmwrgb2gray_tbb.h
        ./Fonction_Somme/rt_nonfinite.h
        ./Fonction_Somme/rtwtypes.h
        ./Fonction_Somme/tmwtypes.h
        ./Fonction_Somme/Fonction_Somme_terminate.c
        ./Fonction_Somme/Fonction_Somme.c
        ./Fonction_Somme/Fonction_Somme_data.c
        ./Fonction_Somme/Fonction_Somme_emxutil.c
        ./Fonction_Somme/Fonction_Somme_initialize.c
        ./Fonction_Somme/rtGetInf.c
        ./Fonction_Somme/rt_nonfinite.c
        ./Fonction_Somme/regionprops.c
        ./Fonction_Somme/rgb2lab.c
        ./Fonction_Somme/rtGetNaN.c
        ./Fonction_Somme/combineVectorElements.c
        ./Fonction_Somme/imfindcircles.c
        ./Fonction_Somme/imfilter.c
        ./Fonction_Somme/imresize.h
        ./Fonction_Somme/multithresh.h
        ./Fonction_Somme/libmwrgb2gray_tbb.h
        ./Fonction_Somme/libmwimfilter.h
        ./Fonction_Somme/libmwippfilter.h
        ./Fonction_Somme/bwconncomp.h
        ./Fonction_Somme/bwconncomp.c
        ./Fonction_Somme/chaccum.c
        ./Fonction_Somme/chaccum.h
        ./Fonction_Somme/chcenters.c
        ./Fonction_Somme/chcenters.h
        ./Fonction_Somme/medfilt2.h
        ./Fonction_Somme/medfilt2.c
        ./Fonction_Somme/mean.h
        ./Fonction_Somme/mean.c
        ./Fonction_Somme/libmwordfilt2.h
        ./Fonction_Somme/Fonction_Somme_rtwutil.c
        ./Fonction_Somme/imregionalmax.c
        ./Fonction_Somme/imregionalmax.h
        ./Fonction_Somme/imhmax.c
        ./Fonction_Somme/imhmax.h
        ./Fonction_Somme/libmwimregionalmax.h
        ./Fonction_Somme/libmwippreconstruct.h
        ./Fonction_Somme/libmwboxfilter.h
        ./Fonction_Somme/mat.h
        ./Fonction_Somme/multithresh.h
        ./Fonction_Somme/libmwddist.h
        ./Fonction_Somme/imresize.c
        ./Fonction_Somme/multithresh.c
        ./Fonction_Somme/libmwrgb2gray_tbb.h
        ./Fonction_Somme/libmwrgb2hsv_tbb.h
        ./Fonction_Somme/libmwippfilter.h
        ./Fonction_Somme/imregionalmax.h
        ./Fonction_Somme/imregionalmax.c
        ./Fonction_Somme/libmwippreconstruct.h
        ./Fonction_Somme/imhist.c
        ./Fonction_Somme/imhist.h
        ./Fonction_Somme/emlrt.h
        ./Fonction_Somme/sort.c
        ./Fonction_Somme/sort.h
        ./Fonction_Somme/libmwordfilt2.h
        ./Fonction_Somme/libmwrgb2gray_tbb.h
        ./Fonction_Somme/libmatlbm.mlib
        ./Fonction_Somme/libmwtbbhist.h
        ./Fonction_Somme/emlrt.h
)]]

set_target_properties(${TARGET} PROPERTIES LINKER_LANGUAGE Cxx)

#[[include_directories(
    ./Fonction_Somme/
)]]

find_library( # Sets the name of the path variable.
        log-lib

        # Specifies the name of the NDK library that
        # you want CMake to locate.
        log )

# Specifies libraries CMake should link to your target library. You
# can link multiple libraries, such as libraries you define in this
# build script, prebuilt third-party libraries, or system libraries.

target_link_libraries( # Specifies the target library.
        native-lib
        # Fonction_Somme
        android
        # Links the target library to the log library
        # included in the NDK.
        ${log-lib} )